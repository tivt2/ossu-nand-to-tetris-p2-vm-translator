push local 10
pop local 10
add

// @LCL
// D=M
// @10
// A=D+A
// D=M
// @SP
// A=M
// M=D
// @SP
// M=M+1

// @LCL
// D=M // 1000
// @10
// D=D+A // 1010
// @SP
// AM=M-1 // A=SP D=addr M=SP
// D=D+M  // A=SP D=addr+v M=v
// A=D-M  // A=addr D=addr+v M=v
// M=D-A  // A=addr D=addr+v M=target

push static 10

// @26
// D=M
// @SP
// A=M
// M=D
// @SP
// M=M+1

pop static 10

// AM=M-1
// D=M
// @26
// M=D

pop local 0

// @LCL
// AD=M
// 

pop pointer 0

// AM=M-1
// D=M
// @3
// M=D

push pointer 1

// @4
// D=M
// @SP
// A=M
// M=D
// @SP
// M=M+1

call function 2

// push returnAddrs
// (RETURN ADDRS)
// push LCL
// @LCL
// D=M
// @SP
// A=M
// M=D
// @SP
// M=M+1
// push ARG
// @ARG
// D=M
// @SP
// A=M
// M=D
// @SP
// M=M+1
// push THIS
// @THIS
// D=M
// @SP
// A=M
// M=D
// @SP
// M=M+1
// push THAT
// @THAT
// D=M
// @SP
// A=M
// M=D
// @SP
// M=M+1
// reposition ARG
// @7
// D=A
// @SP
// D=M-D
// @ARG
// M=D
// goto function
// @FUNCTION
// 0;JMP
// @RETURN ADDRS



// push constant 10 <- ARG
// push constant 5
// call mult 2 <- return addrs
// add
// (LOOP)
// @LOOP
// 0;JMP






// function mult 2
// push contant 0
// pop local 0
// push constant 1
// pop local 1


